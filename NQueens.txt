#include <stdio.h>
#include <stdlib.h>
int n;
int q[100][100]={0};
int pop(int place,int places[],int possibility)
{
	int j;
	int a=places[place];
	for(j=place;j<possibility-1;j++)
	places[j]=places[j+1];
	places[j]=-1;
	return a;
}
int isAttack(int row,int col)
{
	int i,j;
	for(i=row;i>=0;i--)
	{
		if(q[i][col]==1)
			return 1;
	}
	for(i=row,j=col;i>=0,j>=0;i--,j--)
	{
		if(q[i][j]==1)
			return 1;
	}
	for(i=row,j=col;i>=0,j<n;i--,j++)
	{
		if(q[i][j]==1)
			return 1;
	}
	return 0;
}
int nqueen(int row,int col)
{
	int i=0,place;
	int f=0;
	int possibility=0; 
	int places[100];
	if(row+1>n-1)
		return -1;
	for(;i<n;i++)
	{
		if( isAttack(row+1,i)==0 )
		places[possibility++]=i;
	}
	while(possibility)
	{
		place=rand()%(possibility);
		place=pop(place,places,possibility);
		possibility--;
		q[row+1][place]=1;
		f=nqueen(row+1,place);
		if(f==-1)
		return -1;
	}
	q[row][col]=0;
	return col;
}
void printer()
{
	int i,j;	
	for(i=0;i<n;i++)
	{
	for(j=0;j<n;j++)
		printf("%d ",q[i][j]);
	printf("\n");
	}
	printf("--------------\n");
}
void main()
{
	int i,j;	
	printf("Enter n\n");
	scanf("%d",&n);
	printf("nqueen is : \n");
	nqueen(-1,0);
	printer();
	for(i=0;i<n;i++)
	{ 
		for(j=0;j<n;j++)
		{
			if(q[i][j]==1)
			{
				if(isAttack(i,j)==0)
				{
					printf("Wrong\n");
					break;
				}
			}
		}
	}
 return;
} 
